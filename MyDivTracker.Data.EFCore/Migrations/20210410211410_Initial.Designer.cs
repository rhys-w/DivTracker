// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyDivTracker.Data.EFCore.DBContexts;

namespace MyDivTracker.Data.EFCore.Migrations
{
    [DbContext(typeof(MyDivTrackerDbContext))]
    [Migration("20210410211410_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyDivTracker.Data.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIsa")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df1917d7-d66a-4ad6-b58a-847c99d9662f"),
                            Description = "S&S ISA With Vanguard",
                            IsIsa = true,
                            Name = "Vanguard S&S ISA"
                        },
                        new
                        {
                            Id = new Guid("ef680a27-6b09-463a-8c75-25278938101f"),
                            Description = "S&S ISA With Trading 212",
                            IsIsa = true,
                            Name = "Trading 212 S&S ISA"
                        },
                        new
                        {
                            Id = new Guid("6add380f-9aa8-489a-afa3-bea7f6f10d28"),
                            Description = "General Acc. with Trading 212",
                            IsIsa = true,
                            Name = "Trading 212 General Acc."
                        });
                });

            modelBuilder.Entity("MyDivTracker.Data.Dividend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountGBP")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TickerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TickerId");

                    b.ToTable("Dividend");
                });

            modelBuilder.Entity("MyDivTracker.Data.Ticker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsETF")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Ticker");
                });

            modelBuilder.Entity("MyDivTracker.Data.Dividend", b =>
                {
                    b.HasOne("MyDivTracker.Data.Account", "Account")
                        .WithMany("Dividends")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyDivTracker.Data.Ticker", "Ticker")
                        .WithMany("Dividends")
                        .HasForeignKey("TickerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Ticker");
                });

            modelBuilder.Entity("MyDivTracker.Data.Account", b =>
                {
                    b.Navigation("Dividends");
                });

            modelBuilder.Entity("MyDivTracker.Data.Ticker", b =>
                {
                    b.Navigation("Dividends");
                });
#pragma warning restore 612, 618
        }
    }
}
